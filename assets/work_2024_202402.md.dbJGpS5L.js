import{_ as s,c as i,o as a,a3 as l}from"./chunks/framework.C-LRnSyM.js";const u=JSON.parse('{"title":"202402","description":"","frontmatter":{},"headers":[],"relativePath":"work/2024/202402.md","filePath":"work/2024/202402.md"}'),n={name:"work/2024/202402.md"},h=l(`<h1 id="_202402" tabindex="-1">202402 <a class="header-anchor" href="#_202402" aria-label="Permalink to &quot;202402&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><blockquote><p>能熬到现在 说明运气不错，如果没有熬到，那就只需要努力即可 20231122 20240201 965days</p></blockquote></div><h2 id="_0201" tabindex="-1">0201 <a class="header-anchor" href="#_0201" aria-label="Permalink to &quot;0201&quot;">​</a></h2><ul><li>967，还有八天过年，今年继续回湖南</li></ul><h2 id="_0202-03" tabindex="-1">0202/03 <a class="header-anchor" href="#_0202-03" aria-label="Permalink to &quot;0202/03&quot;">​</a></h2><h2 id="_0204" tabindex="-1">0204 <a class="header-anchor" href="#_0204" aria-label="Permalink to &quot;0204&quot;">​</a></h2><ul><li>970</li><li>强制使 <strong>yarn.lock</strong> 文件被 git 追踪</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn.lock</span></span></code></pre></div><h2 id="_0205" tabindex="-1">0205 <a class="header-anchor" href="#_0205" aria-label="Permalink to &quot;0205&quot;">​</a></h2><p>-971</p><ul><li>配置默认的镜像地址</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// **.npmr** 中配置 npm 的默认镜像源为淘宝镜像源</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">registry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//registry.npmmirror.com</span></span></code></pre></div><ul><li>h5 唤端到 app，app 返回 h5,会打开新的页面？是的，跟安卓机制不一样！！</li></ul><h2 id="_0206" tabindex="-1">0206 <a class="header-anchor" href="#_0206" aria-label="Permalink to &quot;0206&quot;">​</a></h2><ul><li>972，出发去上海，因为自己的原因么有抢到票，所以下次还是买到长沙的票，有餐车</li></ul><h2 id="_0207" tabindex="-1">0207 <a class="header-anchor" href="#_0207" aria-label="Permalink to &quot;0207&quot;">​</a></h2><ul><li>973，去姑奶奶家走亲戚，姑奶奶首次见晚辈给了 800 红包</li></ul><h2 id="_0208" tabindex="-1">0208 <a class="header-anchor" href="#_0208" aria-label="Permalink to &quot;0208&quot;">​</a></h2><ul><li>974， 在家躺平，休息</li></ul><h2 id="_0209" tabindex="-1">0209 <a class="header-anchor" href="#_0209" aria-label="Permalink to &quot;0209&quot;">​</a></h2><ul><li>975，大年三十，除夕</li></ul><h2 id="_0210" tabindex="-1">0210 <a class="header-anchor" href="#_0210" aria-label="Permalink to &quot;0210&quot;">​</a></h2><ul><li>976, 新年快乐</li><li>每一年都是生命中重要的一年，当年回首往事的时候，你会为现在的决定感到欣慰.</li><li>畅想：明年这时候我又在哪里过年？当时的心情是怎样的？工作还在吗？家人的健康状态怎么样？</li></ul><h2 id="_0211" tabindex="-1">0211 <a class="header-anchor" href="#_0211" aria-label="Permalink to &quot;0211&quot;">​</a></h2><ul><li>977</li><li>走亲戚，去二姑家，晚上家里来亲戚</li></ul><h2 id="_0212" tabindex="-1">0212 <a class="header-anchor" href="#_0212" aria-label="Permalink to &quot;0212&quot;">​</a></h2><ul><li>978</li><li>借款 300000，利息 3.18，借款 12 个月，总共需要还款利息，300000*0.0318 = 9540 块，今年的愿望就是有一份稳定的工作，随时做好打仗的准备</li><li>借钱这事，怪我没坐住，太高调了，不够沉稳，下次十拿九稳再说</li></ul><h2 id="_0213" tabindex="-1">0213 <a class="header-anchor" href="#_0213" aria-label="Permalink to &quot;0213&quot;">​</a></h2><ul><li>979</li><li>不要做个太好的人，别人其实不会感激你，况且，你现在能力也不足，不支撑这样。</li><li>下次回老家，不要超过 5 天，对俩人都好</li></ul><h2 id="_0214" tabindex="-1">0214 <a class="header-anchor" href="#_0214" aria-label="Permalink to &quot;0214&quot;">​</a></h2><ul><li>980</li></ul><h2 id="_0215" tabindex="-1">0215 <a class="header-anchor" href="#_0215" aria-label="Permalink to &quot;0215&quot;">​</a></h2><ul><li>981</li></ul><h2 id="_0216" tabindex="-1">0216 <a class="header-anchor" href="#_0216" aria-label="Permalink to &quot;0216&quot;">​</a></h2><ul><li>982</li></ul><h2 id="_0217" tabindex="-1">0217 <a class="header-anchor" href="#_0217" aria-label="Permalink to &quot;0217&quot;">​</a></h2><ul><li>983，凌晨 3 点出发去上海，初八回上海休息一天</li><li>再见就是后年，2026 年马年，35 岁，明年蛇年 2025，34 岁。</li><li>暑假去成都？</li><li>2025 年过年前 7 天，上海飞衡阳，除夕前夕坐飞机回到连云港，然后再回上海</li></ul><h2 id="_0218" tabindex="-1">0218 <a class="header-anchor" href="#_0218" aria-label="Permalink to &quot;0218&quot;">​</a></h2><ul><li><p>984，历时 11 天， 衡阳：6 天 岳阳：5 天</p></li><li><p>如果还在现在这家公司，预计国庆回一趟湖南，9 月 29 开始请假，9.29-10.03 呆在衡阳， 10.3-10.7 呆在岳阳</p></li><li><p>这个月还有 11 天，那就是 995，算 1000 天，2.8 年，还有 3/4/5 三个月时间，要不就继续呆，要么就另寻出路，今年注定是极不寻常的一年，希望自己在赚钱的日子上越走越远</p></li></ul><h2 id="_0219" tabindex="-1">0219 <a class="header-anchor" href="#_0219" aria-label="Permalink to &quot;0219&quot;">​</a></h2><ul><li>985</li></ul><h2 id="_0220" tabindex="-1">0220 <a class="header-anchor" href="#_0220" aria-label="Permalink to &quot;0220&quot;">​</a></h2><ul><li>986，忙于业务，三个季度没做需求，突然做需求，有点不适应</li></ul><h2 id="_0221" tabindex="-1">0221 <a class="header-anchor" href="#_0221" aria-label="Permalink to &quot;0221&quot;">​</a></h2><p>-987 身体逐渐恢复中，手写题和算法题也要逐渐恢复</p><h2 id="_0222" tabindex="-1">0222 <a class="header-anchor" href="#_0222" aria-label="Permalink to &quot;0222&quot;">​</a></h2><ul><li>988</li><li>字体大小变成 10px?</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  zoom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>如何隐藏左右滚动的滚动条</li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.parent { .child { clip-path: inset(0px 0px 10px); } }</span></span></code></pre></div><ul><li><a href="http://learn.bythewayer.com/components/countdown" target="_blank" rel="noreferrer">倒计时组件</a></li></ul><h2 id="_0223" tabindex="-1">0223 <a class="header-anchor" href="#_0223" aria-label="Permalink to &quot;0223&quot;">​</a></h2><ul><li>989</li><li>如何进行财源广进？开始学习<a href="https://doc.dcloud.net.cn/uniCloud/" target="_blank" rel="noreferrer">uniapp</a>,目标是通过 uniapp 将一份代码，可以在安卓/ios 都能跑</li><li>小程序？写到吐？</li></ul><h2 id="_0224-0225" tabindex="-1">0224/0225 <a class="header-anchor" href="#_0224-0225" aria-label="Permalink to &quot;0224/0225&quot;">​</a></h2><ul><li>990,元宵节快乐</li><li>荒废了一个月，重拾学习</li></ul><h2 id="_0226" tabindex="-1">0226 <a class="header-anchor" href="#_0226" aria-label="Permalink to &quot;0226&quot;">​</a></h2><ul><li>992，倒计时 99</li><li>身背一身负债，工作越不能丢，老老实实搬砖吧</li><li>三年多的省吃俭用，也就是 2027 年决定是否成功的 1 年,去年结婚，没攒到什么钱，从 2024 年开始，卧薪尝胆三年</li></ul><h2 id="_0227" tabindex="-1">0227 <a class="header-anchor" href="#_0227" aria-label="Permalink to &quot;0227&quot;">​</a></h2><ul><li>993，倒计时 98</li><li>一年刮两次风，一次刮半年。我的家乡连云港赣榆，爸妈在，老家就在，爸妈不在的话，老家也没啥好留恋的。最多在风光 7 年，40 岁之前还能保留现状，7 年之后，如果没有足够的 money 哪有体面的生活</li></ul><h2 id="_0228" tabindex="-1">0228 <a class="header-anchor" href="#_0228" aria-label="Permalink to &quot;0228&quot;">​</a></h2><ul><li>994，倒计时 97，非核心业务非核心开发人员，待的存在感太差。内心希望就去做核心业务和核心开发</li><li>又有俩位同事离职了，内心惶惶的，工资如果涨，其实也没啥，可惜就是万年不动，没办法，只能耗着，多做自己的事，提升自己。来这边已经不知道走了多少同事，自己早晚一天也会离开这里，离开前多做点努力吧，不然亏待了这三年</li><li>手写题和算法题有待加强，最近有点懒散，让自己忙碌充实起来。如何让自己记住这些知识点？基本上不超过 2 周就会忘记</li><li>react 中的 useEvent 是干嘛用的？</li></ul><details class="details custom-block"><summary>Details</summary><blockquote><p>「封装事件处理函数」 在组件多次 render 时保持引用一致</p></blockquote><p>函数内始终能获取到最新的 props 与 state</p></details><h2 id="_0229" tabindex="-1">0229 <a class="header-anchor" href="#_0229" aria-label="Permalink to &quot;0229&quot;">​</a></h2><ul><li>995,倒计时 96，每天都要手写和回忆很多算法题，甚是痛苦</li><li>算法题有点失败,我也很 emo</li><li>undefined 和 null 区别？</li></ul><details class="details custom-block"><summary>Details</summary><h3 id="相同点" tabindex="-1">相同点 <a class="header-anchor" href="#相同点" aria-label="Permalink to &quot;相同点&quot;">​</a></h3><p>undefined 和 null 在 if 语句中，都会被自动转为 false，相等运算符甚至直接报告两者相等。</p><h3 id="不同点" tabindex="-1">不同点 <a class="header-anchor" href="#不同点" aria-label="Permalink to &quot;不同点&quot;">​</a></h3><p>null 表示&quot;没有对象&quot;，即该处不应该有值。典型用法是：</p><ul><li>作为对象原型链的终点。</li><li>作为函数的参数，表示该函数的参数不是对象。</li></ul><p><code>Object.getPrototypeOf(Object.prototype)</code></p><p>undefined 表示&quot;缺少值&quot;，就是此处应该有一个值，但是还没有定义。典型用法是：</p><ul><li>变量被声明了，但没有赋值时，就等于 undefined。</li><li>调用函数时，应该提供的参数没有提供，该参数等于 undefined。</li><li>对象没有赋值的属性，该属性的值为 undefined。</li><li>函数没有返回值时，默认返回 undefined。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">i; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// undefined</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// undefined</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o.p; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// undefined</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// undefined</span></span></code></pre></div></details><h3 id="实现-es6-的继承和寄生组合继承" tabindex="-1">实现 ES6 的继承和寄生组合继承 <a class="header-anchor" href="#实现-es6-的继承和寄生组合继承" aria-label="Permalink to &quot;实现 ES6 的继承和寄生组合继承&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mockEs5Extends</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> proto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">parnet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  proto.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constructor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> proto;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="实现-es-中的-extends-方法" tabindex="-1">实现 ES 中的 extends 方法 <a class="header-anchor" href="#实现-es-中的-extends-方法" aria-label="Permalink to &quot;实现 ES 中的 extends 方法&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mockEs6Extends</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> prototype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  prototype.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constructor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prototype;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPrototypeOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(child, parent); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 从父类中继承静态方法和属性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="用-es5-实现-es6-中的-class" tabindex="-1">用 es5 实现 ES6 中的 class <a class="header-anchor" href="#用-es5-实现-es6-中的-class" aria-label="Permalink to &quot;用 es5 实现 ES6 中的 class&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(target, key, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      value: obj[key],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      enumerable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      configurable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      writable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mockClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">con</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">staticProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(con, obj);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  staticProps </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(con, staticProps);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> con;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,71),t=[h];function e(p,k,r,d,o,E){return a(),i("div",null,t)}const g=s(n,[["render",e]]);export{u as __pageData,g as default};
