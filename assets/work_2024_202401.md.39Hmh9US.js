import{_ as e,c as l,o as a,U as o}from"./chunks/framework.EhhQOqTA.js";const m=JSON.parse('{"title":"202401","description":"","frontmatter":{},"headers":[],"relativePath":"work/2024/202401.md","filePath":"work/2024/202401.md"}'),t={name:"work/2024/202401.md"},r=o('<h1 id="_202401" tabindex="-1">202401 <a class="header-anchor" href="#_202401" aria-label="Permalink to &quot;202401&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><blockquote><p>不知道能不能等到新年到来</p></blockquote><blockquote><p>不幸与幸运，还在目前公司等待新年的到来 20240102</p></blockquote></div><h2 id="_0102" tabindex="-1">0102 <a class="header-anchor" href="#_0102" aria-label="Permalink to &quot;0102&quot;">​</a></h2><ul><li>937</li><li>我以为回南京或者连云港老家能够安心学习，大错特错，上海才是你好好学习的最佳地点和时间，心无旁骛，冲刺最后一个月</li></ul><h2 id="_0103" tabindex="-1">0103 <a class="header-anchor" href="#_0103" aria-label="Permalink to &quot;0103&quot;">​</a></h2><ul><li><p>938</p></li><li><p>看了掘金 N 多个年度总结，90%都是被裁/离职，感觉靠技术生存下去越来越难，要准备副业，很感谢目前所在的公司给予的良好工作环境和氛围，没有裁我，也没欠薪，十分感谢公司</p></li><li><p>带宽怎么计算？</p></li><li><p>响应时间里 TP50/TP90/TP99 分别代表什么？</p></li><li><p>TP50 - 50%的请求的响应时间低于这个值。也就是响应时间的中位数。</p></li><li><p>TP90 - 90%的请求的响应时间低于这个值。表示只有 10%的请求响应时间超过了这个值。</p></li><li><p>TP99 - 99%的请求的响应时间低于这个值。表示只有 1%的请求响应时间超过了这个值。</p></li></ul><p>所以这三个指标从整体上反映了一个服务的响应时间分布情况。TP50 表示中位数,TP90 和 TP99 关注响应时间的尾部分布。一个服务的目标是使这三个指标的值都尽可能低,表示响应时间集中且尾部延迟较低。</p><ul><li><a href="https://juejin.cn/post/7319418651069743167" target="_blank" rel="noreferrer">一文搞懂 Kubernetes 部署策略</a></li><li><a href="https://juejin.cn/post/7250083673189253176" target="_blank" rel="noreferrer">作为前端 leader，怎么快速搭建多环境 CICD 自动化部署？</a></li></ul><h2 id="_0104" tabindex="-1">0104 <a class="header-anchor" href="#_0104" aria-label="Permalink to &quot;0104&quot;">​</a></h2><ul><li>939,很感谢公司，养活了我这么近，快三年了，又是心存感激的一天</li><li>leetcode 刷题进度不如意，需要加快进度，也不能一棵树吊死，每天刷不同类型的题目。<a href="https://leetcode.cn/u/shoarn/" target="_blank" rel="noreferrer">看到一位大佬，每天上班一天能刷 10 道题，太厉害了，真心佩服</a></li><li>Node.js 应用 RSS 内存是指啥？ Resident Set Size，它表示程序运行时主要占用的物理内存大小,Node.js 应用占用内存大小过大可能表示有内存泄漏或其他问题。常见的原因包括： 1.全局变量或缓存未及时释放 2.闭包导致无法释放变量 3.事件监听器未及时移除 4.大对象频繁分配而不释放,通过以下方法分析和优化 Node.js 应用的 RSS 内存: 1.使用内存 profiler 工具分析内存使用情况,找到问题代码 2.避免全局变量污染,使用完即释放 3.使用流操作处理大文件,避免大对象分配</li><li>jemalloc 是什么? jemalloc 是一种高效的内存分配器(memory allocator),主要用于优化程序的内存管理和性能。 jemalloc 的全称是 jvm malloc,它是 Facebook 开发的一个开源 C/C++库,后来被集成到了许多知名的开源项目中,如 FreeBSD、Firefox 和 Facebook 的 HHVM。</li></ul>',10),i=[r];function c(s,n,p,_,d,h){return a(),l("div",null,i)}const f=e(t,[["render",c]]);export{m as __pageData,f as default};
