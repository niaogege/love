import{_ as s,c as i,o as a,V as n}from"./chunks/framework.MmnNiSBH.js";const g=JSON.parse('{"title":"202301","description":"","frontmatter":{},"headers":[],"relativePath":"work/2023/202301.md","filePath":"work/2023/202301.md"}'),t={name:"work/2023/202301.md"},l=n(`<h1 id="_202301" tabindex="-1">202301 <a class="header-anchor" href="#_202301" aria-label="Permalink to &quot;202301&quot;">​</a></h1><h1 id="_0101" tabindex="-1">0101 <a class="header-anchor" href="#_0101" aria-label="Permalink to &quot;0101&quot;">​</a></h1><p>新年第一天就把腰给闪了，不是一个很好的征兆，希望新年还是要在身体安康的情况下，度过每一天</p><ul><li>jenkin 本地 ip 地址：<a href="http://111.230.199.157:8080/" target="_blank" rel="noreferrer">http://111.230.199.157:8080/</a></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 启动 Jenkins 服务</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">systemctl start jenkins</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 重启 Jenkins 服务</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">systemctl restart jenkins</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 停止 Jenkins 服务</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">systemctl stop jenkins</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 查看 Jenkins 服务状态</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">systemctl status jenkins</span></span></code></pre></div><h2 id="_0102" tabindex="-1">0102 <a class="header-anchor" href="#_0102" aria-label="Permalink to &quot;0102&quot;">​</a></h2><ul><li><a href="https://mp.weixin.qq.com/s/UqkG_Pirt2jdXg7stepmqw" target="_blank" rel="noreferrer">Jenkins 配置</a></li><li>如果你 clone 下来一个别人的仓库，在此基础上完成你的代码，推送到自己的仓库可能遇到如下问题： error: remote origin already exists.表示远程仓库已存在。 因此你要进行以下操作： 1、先输入 git remote rm origin 删除关联的 origin 的远程库 2、关联自己的仓库 git remote add origin <a href="https://gitee.com/xxxxxx.git" target="_blank" rel="noreferrer">https://gitee.com/xxxxxx.git</a> 3、最后 git push -u origin master，这样就推送到自己的仓库了。</li></ul><h2 id="_0103" tabindex="-1">0103 <a class="header-anchor" href="#_0103" aria-label="Permalink to &quot;0103&quot;">​</a></h2><p>新年第一天上班，有一股无形的压力笼罩心头。对去年工作年终奖没有期待就没有失望。期望越大，失望越大，本来平时也不是很努力的那一个，加上业务也没有多少增常，OKR 也不是特别好看，所以去年工作上也就这样了，算是一种躺平吧。 分享一篇关于<a href="https://mp.weixin.qq.com/s/wq4dM_cRuAfXSTnaP1uGNQ" target="_blank" rel="noreferrer">前端开发的价值文章</a></p><ul><li><p>今天搞自己的图床，申请了腾讯云的 COS 对象存储服务，又申请了自定义 CDN 加速域名服务，被其中的几个配置搞的晕头转向的，CNAME</p></li><li><p>域名解析 域名解析就是域名到 IP 地址的转换过程。IP 地址是网路上标识您站点的数字地址，为了简单好记，采用域名来代替 ip 地址标识站点地址。域名的解析工作由 <strong>DNS 服务器</strong>完成。</p></li><li><p>A 记录 A 记录是用来<strong>指定主机名（或域名）对应的 IP 地址记录</strong>。用户可以将该域名下的网站服务器指向到自己的 web server 上。同时也可以设置您域名的二级域名。</p></li><li><p><strong>CNAME</strong> 记录 CNAME 记录，即：别名记录。<strong>这种记录允许您将多个名字映射到同一台计算机</strong>。 通常用于同时提供 WWW 和 MAIL 服务的计算机。例如，有一台计算机名为“host.mydomain.com”（A 记录）。 它同时提供 WWW 和 MAIL 服务，为了便于用户访问服务。可以为该计算机设置两个别名（CNAME）：WWW 和 MAIL。</p></li></ul><h2 id="_0104" tabindex="-1">0104 <a class="header-anchor" href="#_0104" aria-label="Permalink to &quot;0104&quot;">​</a></h2><p>今天继续爆 COS 对象存储以及 CDN 域名加速这块争取搞清楚</p><ul><li>怎么看网站有没开启 CDN？ 用户在购买 CDN 服务之后，在使用过程中会比较关心是否有实际效果，首先大家要先确保是否已经开通成功，然后按照基本步骤添加<strong>加速域名、配置 CNAME</strong>,这些都成功搞定之后，接下来就可以测试 CDN 是否加速成功了. 要看一个网站是否开启 CDN，方法很简单，只要在不同的地区 ping 网址就可以，比如在山东济南 ping www.jb51.net 得到的 IP 地址是 111.161.66.167，但在江苏地区 ping www.jb51.net得到的IP确是61.147.92.111，像这样在不同地区ping同一个网址，得到不同的IP地址，那么这种情况就可以判断该网站开了CDN加速。</li></ul><p>如果网站没有开启 CDN，不同地区 Ping 网址是网站服务器的真实地址，如果开启了 CDN 加速，网站内容会缓存到各地区离你最近的服务器，所以访问 IP 会发生变化，根据这个原理，就很容易判断网站是否开启了 CDN 了。 推荐网站测试工具二：<a href="https://ping.chinaz.com/bythewayer.com" target="_blank" rel="noreferrer">站长工具 Ping</a></p><ul><li><p>cdn CNAME: <strong>bythewayer.com.cdn.dnsv1.com.cn</strong> 如何查看当前域名的解析生效状态？<a href="https://cloud.tencent.com/document/product/228/3149" target="_blank" rel="noreferrer">如何验证 CNAME 是否生效</a> 如果您的系统为 Mac 系统或 Linux 系统，可以使用 dig 命令进行验证，以域名www.test.com为例，您可以在终端内运行命令：dig www.test.com，根据运行的解析结果内，可以查看该域名的 CNAME 信息，如果与腾讯云 CDN 提供的 CNAME 地址一致，即当前的 CDN 加速已生效</p></li><li><p>cos 默认域名：即 COS 源站域名，是创建存储桶时，由系统根据存储桶名称和地域自动生成的。CNAME: wmh-1307694505.cos.ap-nanjing.myqcloud.com</p></li><li><p>自定义源站域名：用户可以将已备案的自定义域名，绑定至当前存储桶，通过自定义域名访问桶内对象。</p></li><li><p>问题：PICGo 设置腾讯云 COS 时设定自定义域名不生效？</p></li></ul><h2 id="_0105" tabindex="-1">0105 <a class="header-anchor" href="#_0105" aria-label="Permalink to &quot;0105&quot;">​</a></h2><ul><li>Nexus3 镜像库启动的时候报错</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@VM-12-15-centos bin]# ./nexus start</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> suitable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Java</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Virtual</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Machine</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> could</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> be</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">The</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JVM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> must</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> be</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Please</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> define</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INSTALL4J_JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> point</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> suitable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JVM.</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@VM-12-15-centos bin]# java -version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openjdk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.8.0_352&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OpenJDK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Runtime</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (build </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.0_352-b08</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OpenJDK</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-Bit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> VM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (build </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25.352</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-b08,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mixed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@VM-12-15-centos init.d]# java -version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;11.0.17&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2022</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-10-18</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LTS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Java(TM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) SE Runtime Environment 18.9 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 11.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.17+10-LTS-269</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Java</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HotSpot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-Bit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> VM</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (build </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.17+10-LTS-269,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mixed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@VM-12-15-centos bin]# java --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 11.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.17</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2022</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-10-18</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LTS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Java(TM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) SE Runtime Environment 18.9 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 11.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.17+10-LTS-269</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Java</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HotSpot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-Bit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> VM</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (build </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.17+10-LTS-269,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mixed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>解压 tar.gz: <strong>tar -zxvf</strong> ./nexus-3.29.0-02-unix.tar.gz</li><li><a href="https://copyfuture.com/blogs-details/20210714115344702b" target="_blank" rel="noreferrer">安装 nexus 相关的问题汇总</a></li></ul><p>NEXUS_HOME=/root/nexus-3.29.0-02 export NEXUS_HOME RUN_AS_USER=root export RUN_AS_USER</p><ul><li>搞了大半天 nexus 还是没有成功启动，报错很难解决</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@VM-12-15-centos bin]# ./nexus run</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./nexus:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 585</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/jdk1.8:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span></code></pre></div><h2 id="_0106" tabindex="-1">0106 <a class="header-anchor" href="#_0106" aria-label="Permalink to &quot;0106&quot;">​</a></h2><ul><li><a href="https://vercel.com/dashboard/integrations" target="_blank" rel="noreferrer">checkly</a></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * To learn more about Playwright Test visit:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * https://www.checklyhq.com/docs/browser-checks/playwright-test/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * https://playwright.dev/docs/writing-tests</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line has-focus"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@playwright/test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;visit page and take screenshot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">page</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // If available, we set the target URL to a preview deployment URL provided by the ENVIRONMENT_URL created by Vercel.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Otherwise, we use the Production URL.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> targetUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ENVIRONMENT_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://love-niaogege.vercel.app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // We visit the page. This waits for the &quot;load&quot; event by default.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">goto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(targetUrl);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Test that the response did not fail</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBeLessThan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Take a screenshot</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screenshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;screenshot.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><ul><li><a href="https://tobebetterjavaer.com/xuexiluxian/mysql.html#%E7%AC%AC%E4%B8%89%E9%98%B6%E6%AE%B5-%E8%BF%9B%E9%98%B6-mysql" target="_blank" rel="noreferrer">mySql 学习参考</a></li><li><a href="https://www.nowcoder.com/exam/oj?tab=SQL%E7%AF%87&amp;topicId=82" target="_blank" rel="noreferrer">牛客网 sql 练习</a></li><li><strong>hostnamectl</strong> 查看当前 centos 系统</li><li><strong>netstat -tunlp | grep 8081/9248</strong>查看某一端口或者某一进程的命令</li></ul><h2 id="_0107" tabindex="-1">0107 <a class="header-anchor" href="#_0107" aria-label="Permalink to &quot;0107&quot;">​</a></h2><ul><li>查看内存使用 free -h</li><li>折腾 nexus 好久了 果断先放弃了，折腾了 2 天，服务器显示已经成功启动，但是通过域名+8081 还是不能成功访问，果断放弃</li><li>最近几天开始焦虑，加上工作环境不是特别顺心，特别不舒服。需要自己克服下，不管哪里都会这样，环境艰苦，你不能控制别人，只能好好控制住自己的身心</li></ul><h2 id="_0109" tabindex="-1">0109 <a class="header-anchor" href="#_0109" aria-label="Permalink to &quot;0109&quot;">​</a></h2><ul><li>一年工作\`的成果由他人决定，但好像这种模式所有公司都是适用的，改变不了结果。所以对此不要有任何期待，为此多做二手准备和打算，比如啥技术上的</li><li>坚持下，组织架构肯定会调整，个人猜测上三月份左右</li></ul><h2 id="_0110" tabindex="-1">0110 <a class="header-anchor" href="#_0110" aria-label="Permalink to &quot;0110&quot;">​</a></h2><ul><li>年前还有 2 项工作没有完成，希望尽快今明两天搞定</li><li>一年绩效已经尘埃落定，现在要专心致志，搞好一件事，过年拜访老丈人的问题</li><li>最近睡眠老是在想事，总是在想象各种画面，有好的也有不好的画面，总之大脑控制不住，身体已经很冷了，但控制不住就是想事,怎样才能不让自己想事呢</li></ul><h2 id="_0111" tabindex="-1">0111 <a class="header-anchor" href="#_0111" aria-label="Permalink to &quot;0111&quot;">​</a></h2><ul><li>老姐多次叮嘱我，要攒钱，除了该花的钱没办法，其他时候除了吃喝还是尽量攒钱，今年目标攒钱 XX 万</li></ul><h2 id="_0113" tabindex="-1">0113 <a class="header-anchor" href="#_0113" aria-label="Permalink to &quot;0113&quot;">​</a></h2><ul><li>中奖绝缘体，年会上啥也没有抽中</li></ul><h2 id="_0114" tabindex="-1">0114 <a class="header-anchor" href="#_0114" aria-label="Permalink to &quot;0114&quot;">​</a></h2><ul><li>过年前一周还在改全年规划总结</li><li>过年前定好接下来全年主要做的几件大事</li></ul><h2 id="_0115-0129" tabindex="-1">0115-0129 <a class="header-anchor" href="#_0115-0129" aria-label="Permalink to &quot;0115-0129&quot;">​</a></h2><p>这期间主要是去湖南拜访下老丈人和丈母娘</p><h2 id="_0130" tabindex="-1">0130 <a class="header-anchor" href="#_0130" aria-label="Permalink to &quot;0130&quot;">​</a></h2><ul><li><p>开始搬砖了，不知道还要搬到什么时候</p></li><li><p>技术上还需要更进一步，按照之前的设计方案，不能荒废，年龄越大，压力越大，不喜欢过年，32 岁了，还有最后几年，明年就是合同的最后一年，如果技术上还不能晋升，基本上会被淘汰</p></li><li><p>云原生是一个组合词，由 Cloud 和 Native 组成，“云”表示<strong>应用程序运行于云环境</strong>中，“原生”表示应用程序在设计之初就需要充分考虑到了<strong>云平台的弹性和分布式特性</strong>，天生就是为云设计，并沉淀出最佳实践，所以我认为，云原生既是一种构建和运行应用程序的方法，也是一整体套技术体系和方法论，即：生在云上，长在云上，天生为云。<a href="https://mp.weixin.qq.com/s/p9rcLGj9ZGKmENAn-eyf7w" target="_blank" rel="noreferrer">从 JS 到全生态，云原生时代下的前端成长演进之路 ｜展望前端工程师的 2023</a></p></li></ul><h2 id="_0131" tabindex="-1">0131 <a class="header-anchor" href="#_0131" aria-label="Permalink to &quot;0131&quot;">​</a></h2><ul><li>作为开发者，我一直有个观念就是：项目里我可以不用，但是技术上我不能不懂！</li><li>WebAssembly （缩写 <strong>WASM</strong>）是一种可运行在现代网络浏览器中的新型代码，它的设计目的不是为了发明一种新的编程语言，而是为诸如如 C、C++ 、Rust 之类的语言提供一个高效的编译目标。它在安全、可移植、轻量化、高效率的虚拟机沙箱中执行，并且可以在不同平台上实现接近本地的运行速度，具有天然轻量、安全、快速等优势。不止是浏览器，还包括云端环境。值得一提的是，WASM 的<strong>轻量级、安全模型、隔离性</strong>使得它在广泛的环境中都可以使用，只需要提供一个符合 WebAssembly 标准规范的<strong>虚拟机环境</strong>即可，从边缘云到 IoT、再到函数计算领域，都可以作为类似 Docker 的轻量级替代方案来使用</li><li><a href="https://roadmap.sh/frontend" target="_blank" rel="noreferrer">FE 学习路线</a></li><li><a href="https://roadmap.sh/typescript" target="_blank" rel="noreferrer">TS 学习路线</a></li><li><a href="https://roadmap.sh/javascript" target="_blank" rel="noreferrer">JS</a></li><li><a href="https://roadmap.sh/nodejs" target="_blank" rel="noreferrer">Nodejs 学习路线</a></li></ul>`,45),h=[l];function e(p,k,r,d,o,F){return a(),i("div",null,h)}const y=s(t,[["render",e]]);export{g as __pageData,y as default};
